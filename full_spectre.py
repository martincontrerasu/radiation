# -*- coding: utf-8 -*-
"""full_spectre.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hEgoayoyjNVhcyfkg_B-Nf1p3kSA5dS5
"""

import pandas as pd
import matplotlib.pyplot as plt
import re
import psycopg2 as psy
import numpy as np
from datetime import date, datetime
import csv, pyodbc
import odbc

def connection():

  db_file = r'''C:\Users\Public\Documents\MSDA_XE\UserData\Databases\data.mdb'''
  user = 'admin'
  password = 'password'
  odbc_conn_str = 'DRIVER={Microsoft Access Driver (*.mdb)};DBQ=%s' % (db_file)

  conn = pyodbc.connect(odbc_conn_str)

  cursor = conn.cursor()

  cursor.execute("select DateTime, Data from tblData where IDDataTypeSub1 = 'CALIBRATED'")
  test = cursor.fetchall()
  return test



def radiator():
    
    test = connection()
    data = pd.DataFrame([{"fecha":test[-1][0], "Data":test[-1][1]}])
    """selecciona los datos de la base de datos y retorna el espectro y su intensidad para la ultima medicion"""


    datos = data.iloc[-1].Data

    datos = re.split('0\r\n',datos)
    corr = [re.split("\s", value)[1:-2] for value in datos]
    rad = [float(value[0]) for value in corr]
    valor = [float(value[1]) for value in corr]


    return (rad, valor)

def insert_data(espectro,intensidad, fecha):
    conn = None
    try:
        conn = psy.connect(host="salt.db.elephantsql.com",
                           user="aeaudjwo", password="5uHoUq62gU5BoS2HvJQH0ogSw_94nxCE")

        c = conn.cursor()

        c.execute("""INSERT INTO espectro (
                    fecha,
                    espectro,
                    intensidad) VALUES (%s,%s,%s)""",(fecha,espectro,intensidad))
        conn.commit()
        conn.close()

    except (Exception, psy.DatabaseError) as error:
        print (error)

    finally:
        if conn is not None:
            conn.close()

def del_data():
    conn = None
    try:
        conn = psy.connect(host="salt.db.elephantsql.com",
                           user="aeaudjwo", password="5uHoUq62gU5BoS2HvJQH0ogSw_94nxCE")

        c = conn.cursor()

        c.execute("DELETE FROM espectro")
        conn.commit()
        conn.close()
    except:
        print("Ha ocurrido un error al intentar eliminar el espectro

def insert_espectro():
    #borra espectros previos
    del_data()
    #inserta los valores nuevos
    espectro, intensidad = radiator()
    fecha_ = datetime.now().strftime("%d-%m-%Y %H:%M")
    for spc,inten in zip(espectro, intensidad):
        insert_data(spc,inten, fecha_)

def radiator2(data):
    """selecciona los datos de la base de datos y retorna dos listas: máxima radiacion y radiación media"""
    listamax = []
    listamean = []

    for datos in data.Data:

        datos = re.split('0\r\n',datos)
        corr = [re.split("\s", value)[1:-2] for value in datos]
        rad = [float(value[0]) for value in corr]
        valor = [float(value[1]) for value in corr]

        maxrad = max(valor)
        listamax.append(maxrad)

        meanrad = np.mean(valor)
        listamean.append(meanrad)

    return listamax, listamean

def insert_data2(fecha,maxrad,meanrad):
    conn = None
    try:
        conn = psy.connect(host="salt.db.elephantsql.com",
                           user="aeaudjwo", password="5uHoUq62gU5BoS2HvJQH0ogSw_94nxCE")

        c = conn.cursor()

        c.execute("""INSERT INTO radiation (
                    fecha,
                    maxrad,
                    meanrad) VALUES (%s,%s,%s)""",(fecha,maxrad,meanrad))
        conn.commit()
        conn.close()

    except (Exception, psy.DatabaseError) as error:
        print (error)

    finally:
        if conn is not None:
            conn.close()

def maxradiation():
  test = connection()
  data = pd.DataFrame([{"fecha":test[-1][0], "Data":test[-1][1]}])
  radmax, radmean = radiator2(data)
  fecha = str(data.fecha)
  fecha = fecha[4:20]
  insert_data2(fecha,radmax[0],radmean[0])
